{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":11780671,"sourceType":"datasetVersion","datasetId":7396158}],"dockerImageVersionId":31012,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-05-12T08:53:40.713629Z","iopub.execute_input":"2025-05-12T08:53:40.713988Z","iopub.status.idle":"2025-05-12T08:53:43.424853Z","shell.execute_reply.started":"2025-05-12T08:53:40.713933Z","shell.execute_reply":"2025-05-12T08:53:43.423603Z"}},"outputs":[],"execution_count":1},{"cell_type":"markdown","source":"### Step 1: Import Required Libraries","metadata":{}},{"cell_type":"code","source":"import numpy as np\nimport matplotlib.pyplot as plt\nfrom tensorflow.keras.datasets import mnist\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Flatten, Conv2D, MaxPooling2D\nfrom tensorflow.keras.utils import to_categorical\nfrom tensorflow.keras.preprocessing import image","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-12T08:54:21.507279Z","iopub.execute_input":"2025-05-12T08:54:21.508305Z","iopub.status.idle":"2025-05-12T08:54:41.079641Z","shell.execute_reply.started":"2025-05-12T08:54:21.508270Z","shell.execute_reply":"2025-05-12T08:54:41.078313Z"}},"outputs":[{"name":"stderr","text":"2025-05-12 08:54:23.717309: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\nWARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nE0000 00:00:1747040063.982054      31 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\nE0000 00:00:1747040064.057189      31 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"}],"execution_count":2},{"cell_type":"markdown","source":"### Step 2: Load and Prepare the Dataset","metadata":{}},{"cell_type":"code","source":"# Load MNIST dataset\n(X_train, y_train), (X_test, y_test) = mnist.load_data()\n\n# Normalize pixel values to be between 0 and 1\nX_train = X_train.astype('float32') / 255.0\nX_test = X_test.astype('float32') / 255.0\n\n# Reshape data to include channel dimension (for CNN)\nX_train = X_train.reshape(X_train.shape[0], 28, 28, 1)\nX_test = X_test.reshape(X_test.shape[0], 28, 28, 1)\n\n# Convert labels to one-hot encoded vectors\ny_train = to_categorical(y_train, 10)\ny_test = to_categorical(y_test, 10)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-12T08:55:42.053330Z","iopub.execute_input":"2025-05-12T08:55:42.054319Z","iopub.status.idle":"2025-05-12T08:55:42.740292Z","shell.execute_reply.started":"2025-05-12T08:55:42.054271Z","shell.execute_reply":"2025-05-12T08:55:42.739263Z"}},"outputs":[{"name":"stdout","text":"Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n\u001b[1m11490434/11490434\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 0us/step\n","output_type":"stream"}],"execution_count":3},{"cell_type":"markdown","source":"### Step 3: Build the Model","metadata":{}},{"cell_type":"code","source":"def create_model():\n    model = Sequential([\n        # First convolutional layer\n        Conv2D(32, (3, 3), activation='relu', input_shape=(28, 28, 1)),\n        MaxPooling2D((2, 2)),\n        \n        # Second convolutional layer\n        Conv2D(64, (3, 3), activation='relu'),\n        MaxPooling2D((2, 2)),\n        \n        # Flatten the output for dense layers\n        Flatten(),\n        \n        # Dense layers\n        Dense(128, activation='relu'),\n        Dense(10, activation='softmax')  # Output layer with 10 classes\n    ])\n    \n    model.compile(optimizer='adam',\n                 loss='categorical_crossentropy',\n                 metrics=['accuracy'])\n    \n    return model\n\nmodel = create_model()\nmodel.summary()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-12T08:56:43.496267Z","iopub.execute_input":"2025-05-12T08:56:43.497280Z","iopub.status.idle":"2025-05-12T08:56:43.657511Z","shell.execute_reply.started":"2025-05-12T08:56:43.497231Z","shell.execute_reply":"2025-05-12T08:56:43.656758Z"}},"outputs":[{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/keras/src/layers/convolutional/base_conv.py:107: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n2025-05-12 08:56:43.517687: E external/local_xla/xla/stream_executor/cuda/cuda_driver.cc:152] failed call to cuInit: INTERNAL: CUDA error: Failed call to cuInit: UNKNOWN ERROR (303)\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"sequential\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                        \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape               \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m        Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n│ conv2d (\u001b[38;5;33mConv2D\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m26\u001b[0m, \u001b[38;5;34m26\u001b[0m, \u001b[38;5;34m32\u001b[0m)          │             \u001b[38;5;34m320\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ max_pooling2d (\u001b[38;5;33mMaxPooling2D\u001b[0m)         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m13\u001b[0m, \u001b[38;5;34m13\u001b[0m, \u001b[38;5;34m32\u001b[0m)          │               \u001b[38;5;34m0\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ conv2d_1 (\u001b[38;5;33mConv2D\u001b[0m)                    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m11\u001b[0m, \u001b[38;5;34m11\u001b[0m, \u001b[38;5;34m64\u001b[0m)          │          \u001b[38;5;34m18,496\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ max_pooling2d_1 (\u001b[38;5;33mMaxPooling2D\u001b[0m)       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m5\u001b[0m, \u001b[38;5;34m5\u001b[0m, \u001b[38;5;34m64\u001b[0m)            │               \u001b[38;5;34m0\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ flatten (\u001b[38;5;33mFlatten\u001b[0m)                    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1600\u001b[0m)                │               \u001b[38;5;34m0\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dense (\u001b[38;5;33mDense\u001b[0m)                        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m128\u001b[0m)                 │         \u001b[38;5;34m204,928\u001b[0m │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                      │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m10\u001b[0m)                  │           \u001b[38;5;34m1,290\u001b[0m │\n└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                         </span>┃<span style=\"font-weight: bold\"> Output Shape                </span>┃<span style=\"font-weight: bold\">         Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n│ conv2d (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)                      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">26</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">26</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)          │             <span style=\"color: #00af00; text-decoration-color: #00af00\">320</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ max_pooling2d (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">13</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">13</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)          │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ conv2d_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)                    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">11</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">11</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)          │          <span style=\"color: #00af00; text-decoration-color: #00af00\">18,496</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ max_pooling2d_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">5</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">5</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)            │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ flatten (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Flatten</span>)                    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1600</span>)                │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)                 │         <span style=\"color: #00af00; text-decoration-color: #00af00\">204,928</span> │\n├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                      │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">10</span>)                  │           <span style=\"color: #00af00; text-decoration-color: #00af00\">1,290</span> │\n└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m225,034\u001b[0m (879.04 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">225,034</span> (879.04 KB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m225,034\u001b[0m (879.04 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">225,034</span> (879.04 KB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}],"execution_count":4},{"cell_type":"markdown","source":"### Step 4: Train the Model","metadata":{}},{"cell_type":"code","source":"history = model.fit(X_train, y_train, \n                    epochs=10, \n                    batch_size=128, \n                    validation_split=0.1)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-12T08:57:15.591060Z","iopub.execute_input":"2025-05-12T08:57:15.591488Z","iopub.status.idle":"2025-05-12T09:01:19.053199Z","shell.execute_reply.started":"2025-05-12T08:57:15.591443Z","shell.execute_reply":"2025-05-12T09:01:19.052285Z"}},"outputs":[{"name":"stdout","text":"Epoch 1/10\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 54ms/step - accuracy: 0.8522 - loss: 0.5129 - val_accuracy: 0.9805 - val_loss: 0.0661\nEpoch 2/10\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 52ms/step - accuracy: 0.9790 - loss: 0.0662 - val_accuracy: 0.9873 - val_loss: 0.0418\nEpoch 3/10\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m41s\u001b[0m 51ms/step - accuracy: 0.9882 - loss: 0.0399 - val_accuracy: 0.9893 - val_loss: 0.0382\nEpoch 4/10\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 51ms/step - accuracy: 0.9904 - loss: 0.0303 - val_accuracy: 0.9897 - val_loss: 0.0350\nEpoch 5/10\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 49ms/step - accuracy: 0.9929 - loss: 0.0229 - val_accuracy: 0.9918 - val_loss: 0.0316\nEpoch 6/10\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 53ms/step - accuracy: 0.9941 - loss: 0.0190 - val_accuracy: 0.9910 - val_loss: 0.0354\nEpoch 7/10\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 55ms/step - accuracy: 0.9957 - loss: 0.0143 - val_accuracy: 0.9907 - val_loss: 0.0345\nEpoch 8/10\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 53ms/step - accuracy: 0.9960 - loss: 0.0135 - val_accuracy: 0.9875 - val_loss: 0.0494\nEpoch 9/10\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 55ms/step - accuracy: 0.9963 - loss: 0.0111 - val_accuracy: 0.9910 - val_loss: 0.0330\nEpoch 10/10\n\u001b[1m422/422\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 51ms/step - accuracy: 0.9976 - loss: 0.0064 - val_accuracy: 0.9918 - val_loss: 0.0344\n","output_type":"stream"}],"execution_count":5},{"cell_type":"markdown","source":"### Step 5: Evaluate the Model","metadata":{}},{"cell_type":"code","source":"# Evaluate on test set\ntest_loss, test_acc = model.evaluate(X_test, y_test)\nprint(f\"\\nTest accuracy: {test_acc:.4f}\")\n\n# Plot training history\nplt.figure(figsize=(12, 4))\nplt.subplot(1, 2, 1)\nplt.plot(history.history['accuracy'], label='Training Accuracy')\nplt.plot(history.history['val_accuracy'], label='Validation Accuracy')\nplt.title('Accuracy over epochs')\nplt.legend()\n\nplt.subplot(1, 2, 2)\nplt.plot(history.history['loss'], label='Training Loss')\nplt.plot(history.history['val_loss'], label='Validation Loss')\nplt.title('Loss over epochs')\nplt.legend()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-12T09:02:12.932337Z","iopub.execute_input":"2025-05-12T09:02:12.933492Z","iopub.status.idle":"2025-05-12T09:02:15.845285Z","shell.execute_reply.started":"2025-05-12T09:02:12.933413Z","shell.execute_reply":"2025-05-12T09:02:15.844128Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m313/313\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 7ms/step - accuracy: 0.9898 - loss: 0.0351\n\nTest accuracy: 0.9923\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x400 with 2 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":6},{"cell_type":"markdown","source":"### Step 6: Make Predictions on New Images","metadata":{}},{"cell_type":"code","source":"def predict_digit(img_path):\n    # Load and preprocess the image\n    img = image.load_img(img_path, color_mode='grayscale', target_size=(28, 28))\n    img_array = image.img_to_array(img)\n    img_array = img_array.reshape(1, 28, 28, 1)\n    img_array = img_array.astype('float32') / 255.0\n    \n    # Make prediction\n    prediction = model.predict(img_array)\n    predicted_digit = np.argmax(prediction)\n    confidence = np.max(prediction)\n    \n    # Display the image\n    plt.imshow(img_array.reshape(28, 28), cmap='gray')\n    plt.title(f\"Predicted: {predicted_digit} (Confidence: {confidence:.2f})\")\n    plt.axis('off')\n    plt.show()\n    \n    return predicted_digit, confidence\n\n# Example usage (you would replace with your own image path)\n# predicted, confidence = predict_digit('path_to_your_image.png')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-12T09:02:48.489377Z","iopub.execute_input":"2025-05-12T09:02:48.489855Z","iopub.status.idle":"2025-05-12T09:02:48.499002Z","shell.execute_reply.started":"2025-05-12T09:02:48.489823Z","shell.execute_reply":"2025-05-12T09:02:48.497541Z"}},"outputs":[],"execution_count":7},{"cell_type":"code","source":"predict_digit(\"/kaggle/input/screenshot-2025-05-12-143514/Screenshot 2025-05-12 143514.png\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-12T09:07:44.904781Z","iopub.execute_input":"2025-05-12T09:07:44.905174Z","iopub.status.idle":"2025-05-12T09:07:45.219324Z","shell.execute_reply.started":"2025-05-12T09:07:44.905148Z","shell.execute_reply":"2025-05-12T09:07:45.218358Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 116ms/step\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}},{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"(4, 0.99999225)"},"metadata":{}}],"execution_count":8},{"cell_type":"code","source":"# Save the trained model\nmodel.save('mnist_digit_recognizer.h5')  # Saves as HDF5 file\n\n# Optional: Save in TensorFlow SavedModel format (creates a directory)\n# model.save('mnist_digit_recognizer')  # No .h5 extension\n\nprint(\"Model saved successfully!\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-12T09:11:10.554151Z","iopub.execute_input":"2025-05-12T09:11:10.554578Z","iopub.status.idle":"2025-05-12T09:11:10.622013Z","shell.execute_reply.started":"2025-05-12T09:11:10.554550Z","shell.execute_reply":"2025-05-12T09:11:10.620852Z"}},"outputs":[{"name":"stdout","text":"Model saved successfully!\n","output_type":"stream"}],"execution_count":10},{"cell_type":"code","source":"import os\nprint(\"Current directory:\", os.getcwd())  # Output: /kaggle/working/\nprint(\"Files in working directory:\", os.listdir())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-05-12T09:15:39.119004Z","iopub.execute_input":"2025-05-12T09:15:39.119436Z","iopub.status.idle":"2025-05-12T09:15:39.126622Z","shell.execute_reply.started":"2025-05-12T09:15:39.119408Z","shell.execute_reply":"2025-05-12T09:15:39.125512Z"}},"outputs":[{"name":"stdout","text":"Current directory: /kaggle/working\nFiles in working directory: ['.virtual_documents', 'mnist_digit_recognizer.h5']\n","output_type":"stream"}],"execution_count":12},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}